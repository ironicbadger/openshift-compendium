{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/ocp4-admintasksocp4-approve-csrs",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Certificate and CSR management\",\n  \"tags\": [\"Openshift 4\", \"Admin Tasks\", \"Certificates\", \"CSRs\"],\n  \"emoji\": \"ðŸŽ“\",\n  \"link\": \"https://docs.openshift.com/container-platform/4.5/machine_management/user_infra/adding-vsphere-compute-user-infra.html#installation-approve-csrs_adding-vsphere-compute-user-infra\",\n  \"created\": \"2020-06-14T03:17:19.000Z\",\n  \"modified\": \"2020-09-22T15:34:35.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"CSR stands for Certificate Signing Request.\"), mdx(\"h2\", {\n    \"id\": \"sign-an-individual-csr\"\n  }, \"Sign an individual CSR\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc adm certificate approve <csr_name>\\n\")), mdx(\"h2\", {\n    \"id\": \"sign-all-pending-csr\"\n  }, \"Sign all pending \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"csr\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc get csr -o name | xargs oc adm certificate approve\\n\")), mdx(\"p\", null, \"However, the upstream OCP documentation suggests the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc get csr -o go-template='{{range .items}}{{if not .status}}{{.metadata.name}}{{\\\"\\\\n\\\"}}{{end}}{{end}}' | xargs oc adm certificate approve\\n\")), mdx(\"h2\", {\n    \"id\": \"authenticate-users-using-tls-certificates\"\n  }, \"Authenticate users using TLS certificates\"), mdx(\"p\", null, \"Create a new user \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OCP_USERNAME\"), \" to perform operations against the API server \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OCP_API_SERVER\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"export OCP_USERNAME=\\\"alice\\\"\\nexport OCP_API_SERVER=\\\"https://api.example.com:6443\\\"\\n\")), mdx(\"p\", null, \"Generate a private key and a CSR for the new user.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"mkdir ${OCP_USERNAME}\\n\\nopenssl req -new -nodes -subj \\\"/CN=${OCP_USERNAME}\\\" \\\\\\n  -keyout ${OCP_USERNAME}/private.key -out ${OCP_USERNAME}/request.csr\\n\")), mdx(\"p\", null, \"Authenticate to Openshift API with an user with permissions to create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CertificateSigningRequest\"), \" objects (e.g. kube-admin).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc login --server=${OCP_API_SERVER}\\n\")), mdx(\"p\", null, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CertificateSigningRequest\"), \" to sign the CSR by the kube-apiserver CA.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cat <<EOF | oc apply -f -\\napiVersion: certificates.k8s.io/v1beta1\\nkind: CertificateSigningRequest\\nmetadata:\\n  name: tls-auth-${OCP_USERNAME}\\nspec:\\n  signerName: \\\"kubernetes.io/kube-apiserver-client\\\"\\n  request: $(cat ${OCP_USERNAME}/request.csr | base64 | tr -d '\\\\n')\\n  usages:\\n    - digital signature\\n    - key encipherment\\n    - client auth\\n  extra:\\n    scopes.authorization.openshift.io:\\n      - user:full\\nEOF\\n\")), mdx(\"p\", null, \"Approve the pending CSR.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc adm certificate approve tls-auth-${OCP_USERNAME}\\n\")), mdx(\"p\", null, \"Get the user certificate from the signed CSR.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc get csr tls-auth-${OCP_USERNAME} -o jsonpath=\\\"{.status.certificate}\\\" |\\\\\\n  base64 -d > ${OCP_USERNAME}/certificate.pem\\n\")), mdx(\"p\", null, \"Get the CA chain for the API server.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc get cm kube-apiserver-server-ca \\\\\\n  -o jsonpath=\\\"{.data.ca-bundle\\\\.crt}\\\" -n openshift-kube-apiserver > api-ca.pem\\n\")), mdx(\"p\", null, \"Create a kubeconfig to authenticate the new user using the TLS certificate.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc adm create-kubeconfig \\\\\\n  --kubeconfig=${OCP_USERNAME}/kubeconfig \\\\\\n  --user=${OCP_USERNAME} \\\\\\n  --client-certificate=${OCP_USERNAME}/certificate.pem \\\\\\n  --client-key=${OCP_USERNAME}/private.key \\\\\\n  --certificate-authority=api-ca.pem \\\\\\n  --public-master=${OCP_API_SERVER} \\\\\\n  --master=${OCP_API_SERVER}\\n\")), mdx(\"p\", null, \"Authenticate using the new kubeconfig.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"export KUBECONFIG=\\\"${OCP_USERNAME}/kubeconfig\\\"\\n\")), mdx(\"p\", null, \"Verify the new user can make operations against the API server.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc whoami\\n\")), mdx(\"h2\", {\n    \"id\": \"verify-the-api-certificates\"\n  }, \"Verify the API certificates\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"echo | openssl s_client -connect api.ocp4.example.com:6443 | openssl x509 -noout -text\\n\")), mdx(\"h2\", {\n    \"id\": \"extract-etcd-ca\"\n  }, \"Extract etcd CA\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"oc get secrets -n openshift-config etcd-signer -o \\\"jsonpath={.data['tls\\\\.crt']}\\\" |  base64 -d | openssl x509 -text\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Certificate and CSR management","tags":["Openshift 4","Admin Tasks","Certificates","CSRs"],"emoji":"ðŸŽ“","link":"https://docs.openshift.com/container-platform/4.5/machine_management/user_infra/adding-vsphere-compute-user-infra.html#installation-approve-csrs_adding-vsphere-compute-user-infra","modified":"September 22, 2020","modifiedTimestamp":"2020-09-22T15:34:35.000Z"},"references":[],"fields":{"slug":"/ocp4-admintasks/ocp4-approve-csrs"},"tableOfContents":{"items":[{"url":"#sign-an-individual-csr","title":"Sign an individual CSR"},{"url":"#sign-all-pending-csr","title":"Sign all pending csr"},{"url":"#authenticate-users-using-tls-certificates","title":"Authenticate users using TLS certificates"},{"url":"#verify-the-api-certificates","title":"Verify the API certificates"},{"url":"#extract-etcd-ca","title":"Extract etcd CA"}]},"parent":{"relativePath":"ocp4-admintasks/ocp4-approve-csrs.md"}}},"pageContext":{"id":"9c79b576-9401-54f7-a727-ccd84a7f52f0","previous":{"id":"d080afeb-1bf0-52bc-afb4-7c80b2206fe6","frontmatter":{"title":"Modify vSphere Credentials","tags":["Openshift 4","VMWare"]},"fields":{"slug":"/ocp4-admintasks/ocp4-modify-vsphere-creds"}},"next":{"id":"d6874d0c-4431-5038-8e3a-8a56eef2312c","frontmatter":{"title":"Modify Master configuration","tags":["Openshift 4","Admin Tasks","Configuration"]},"fields":{"slug":"/ocp4-admintasks/modify-master-config"}},"hasUntagged":false,"basePath":"/","tags":[{"tag":"API","totalCount":1,"slug":"/api","path":"/tag/api"},{"tag":"Admin Tasks","totalCount":18,"slug":"/admin-tasks","path":"/tag/admin-tasks"},{"tag":"Auth","totalCount":1,"slug":"/auth","path":"/tag/auth"},{"tag":"Blog Posts","totalCount":1,"slug":"/blog-posts","path":"/tag/blog-posts"},{"tag":"CSRs","totalCount":1,"slug":"/cs-rs","path":"/tag/cs-rs"},{"tag":"Capacity","totalCount":5,"slug":"/capacity","path":"/tag/capacity"},{"tag":"Certificates","totalCount":3,"slug":"/certificates","path":"/tag/certificates"},{"tag":"Cleanup","totalCount":1,"slug":"/cleanup","path":"/tag/cleanup"},{"tag":"Configuration","totalCount":10,"slug":"/configuration","path":"/tag/configuration"},{"tag":"DNS","totalCount":1,"slug":"/dns","path":"/tag/dns"},{"tag":"Deployments","totalCount":1,"slug":"/deployments","path":"/tag/deployments"},{"tag":"Disconnected","totalCount":2,"slug":"/disconnected","path":"/tag/disconnected"},{"tag":"Ignition","totalCount":1,"slug":"/ignition","path":"/tag/ignition"},{"tag":"Images","totalCount":5,"slug":"/images","path":"/tag/images"},{"tag":"Installation","totalCount":4,"slug":"/installation","path":"/tag/installation"},{"tag":"Logging","totalCount":1,"slug":"/logging","path":"/tag/logging"},{"tag":"Networking","totalCount":1,"slug":"/networking","path":"/tag/networking"},{"tag":"Openshift 4","totalCount":54,"slug":"/openshift-4","path":"/tag/openshift-4"},{"tag":"Quota","totalCount":1,"slug":"/quota","path":"/tag/quota"},{"tag":"RHCOS","totalCount":3,"slug":"/rhcos","path":"/tag/rhcos"},{"tag":"Registry","totalCount":3,"slug":"/registry","path":"/tag/registry"},{"tag":"SDN","totalCount":1,"slug":"/sdn","path":"/tag/sdn"},{"tag":"Secrets","totalCount":3,"slug":"/secrets","path":"/tag/secrets"},{"tag":"Skopeo","totalCount":1,"slug":"/skopeo","path":"/tag/skopeo"},{"tag":"Terraform","totalCount":1,"slug":"/terraform","path":"/tag/terraform"},{"tag":"Tools","totalCount":1,"slug":"/tools","path":"/tag/tools"},{"tag":"Troubleshooting","totalCount":12,"slug":"/troubleshooting","path":"/tag/troubleshooting"},{"tag":"Upgrade","totalCount":3,"slug":"/upgrade","path":"/tag/upgrade"},{"tag":"VMWare","totalCount":3,"slug":"/vm-ware","path":"/tag/vm-ware"},{"tag":"etcd","totalCount":3,"slug":"/etcd","path":"/tag/etcd"},{"tag":"oc","totalCount":8,"slug":"/oc","path":"/tag/oc"},{"tag":"tcpdump","totalCount":1,"slug":"/tcpdump","path":"/tag/tcpdump"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}