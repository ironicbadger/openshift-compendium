{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/ocp4-installationcustom-bare-metal-iso",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Creating a Custom ISO for Bare Metal Installations\",\n  \"tags\": [\"Openshift 4\", \"Installation\"],\n  \"emoji\": \"ðŸ’¿\",\n  \"created\": \"2020-07-03T14:16:22.000Z\",\n  \"modified\": \"2020-09-22T13:49:21.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"custom-iso-for-quick-bare-metal-installations\"\n  }, \"Custom ISO for Quick Bare Metal Installations\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Obtain the bare metal installation ISO from mirror.openshift.com\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mount the ISO\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo mount -t iso9660 -o loop install_iso.iso /mnt/rhcos_install_iso\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The ISO is read-only.  To make changes the contents of the ISO must be copied to a another directory which has read/write permissions\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cp -r /mnt/rhcos_install_iso/* /tmp/working-dir\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Edit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"isolinux/isolinux.cfg\"), \" to add menu entries corresponding to the kernel argument required to ignite your nodes.  For example:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"label bootstrap\\n  menu label ^Install RHEL CoreOS - bootstrap \\n  kernel /images/vmlinuz\\n  append initrd=/images/initramfs.img nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url=http://192.168.58.24:9000/img.raw.gz coreos.inst.ignition_url=http://192.168.58.24:9000/bootstrap.ign ip=192.168.58.150::192.168.58.1:255.255.255.0:bootstrap:ens3:none nameserver=192.168.58.24\\n\\nlabel master0\\n  menu label ^Install RHEL CoreOS - master-0\\n  kernel /images/vmlinuz\\n  append initrd=/images/initramfs.img nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url=http://192.168.58.24:9000/img.raw.gz coreos.inst.ignition_url=http://192.168.58.24:9000/master.ign ip=192.168.58.151::192.168.58.1:255.255.255.0:master-0:ens3:none nameserver=192.168.58.24\\n\\nlabel master1\\n  menu label ^Install RHEL CoreOS - master-1\\n  kernel /images/vmlinuz\\n  append initrd=/images/initramfs.img nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url=http://192.168.58.24:9000/img.raw.gz coreos.inst.ignition_url=http://192.168.58.24:9000/master.ign ip=192.168.58.152::192.168.58.1:255.255.255.0:master-1:ens3:none nameserver=192.168.58.24\\n\\nlabel master2\\n  menu label ^Install RHEL CoreOS - master-2\\n  kernel /images/vmlinuz\\n  append initrd=/images/initramfs.img nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url=http://192.168.58.24:9000/img.raw.gz coreos.inst.ignition_url=http://192.168.58.24:9000/master.ign ip=192.168.58.153::192.168.58.1:255.255.255.0:master-2:ens3:none nameserver=192.168.58.24\\n\\nlabel worker0\\n  menu label ^Install RHEL CoreOS - worker-0\\n  kernel /images/vmlinuz\\n  append initrd=/images/initramfs.img nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url=http://192.168.58.24:9000/img.raw.gz coreos.inst.ignition_url=http://192.168.58.24:9000/worker.ign ip=192.168.58.160::192.168.58.1:255.255.255.0:worker-0:ens3:none nameserver=192.168.58.24\\n\\nlabel worker1\\n  menu label ^Install RHEL CoreOS - worker-1\\n  kernel /images/vmlinuz\\n  append initrd=/images/initramfs.img nomodeset rd.neednet=1 coreos.inst=yes coreos.inst.install_dev=sda coreos.inst.image_url=http://192.168.58.24:9000/img.raw.gz coreos.inst.ignition_url=http://192.168.58.24:9000/worker.ign ip=192.168.58.161::192.168.58.1:255.255.255.0:worker-1:ens3:none nameserver=192.168.58.24\\n\")), mdx(\"ol\", {\n    \"start\": 5\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create an updated ISO\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"mkisofs -o custom_rhcos.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -R -V \\\"RHCOS $instance ISO\\\" /tmp/working-dir\\n\")), mdx(\"p\", null, \"The ISO can now be burned to a physical CD or used to boot a virtual machine.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Creating a Custom ISO for Bare Metal Installations","tags":["Openshift 4","Installation"],"emoji":"ðŸ’¿","link":null,"modified":"September 22, 2020","modifiedTimestamp":"2020-09-22T13:49:21.000Z"},"references":[],"fields":{"slug":"/ocp4-installation/custom-bare-metal-iso"},"tableOfContents":{"items":[{"url":"#custom-iso-for-quick-bare-metal-installations","title":"Custom ISO for Quick Bare Metal Installations"}]},"parent":{"relativePath":"ocp4-installation/custom-bare-metal-iso.md"}}},"pageContext":{"id":"557ea375-e03f-5871-a193-775bb66b50e1","previous":{"id":"6f4e3cf9-9771-553d-83e5-83d781d4265f","frontmatter":{"title":"DC Cluster Mirror and Upgrade","tags":["Openshift 4","Disconnected","Registry","Upgrade"]},"fields":{"slug":"/ocp4-installation/dc-mirror-registry-and-upgrade"}},"next":{"id":"5c37b373-b853-5a50-940e-8ee14b2013ad","frontmatter":{"title":"Switch cluster version via update channels","tags":["Openshift 4","Admin Tasks","Upgrade"]},"fields":{"slug":"/ocp4-admintasks/switch-cluster-version"}},"hasUntagged":false,"basePath":"/","tags":[{"tag":"API","totalCount":1,"slug":"/api","path":"/tag/api"},{"tag":"Admin Tasks","totalCount":18,"slug":"/admin-tasks","path":"/tag/admin-tasks"},{"tag":"Auth","totalCount":1,"slug":"/auth","path":"/tag/auth"},{"tag":"Blog Posts","totalCount":1,"slug":"/blog-posts","path":"/tag/blog-posts"},{"tag":"CSRs","totalCount":1,"slug":"/cs-rs","path":"/tag/cs-rs"},{"tag":"Capacity","totalCount":5,"slug":"/capacity","path":"/tag/capacity"},{"tag":"Certificates","totalCount":3,"slug":"/certificates","path":"/tag/certificates"},{"tag":"Cleanup","totalCount":1,"slug":"/cleanup","path":"/tag/cleanup"},{"tag":"Configuration","totalCount":10,"slug":"/configuration","path":"/tag/configuration"},{"tag":"DNS","totalCount":1,"slug":"/dns","path":"/tag/dns"},{"tag":"Deployments","totalCount":1,"slug":"/deployments","path":"/tag/deployments"},{"tag":"Disconnected","totalCount":2,"slug":"/disconnected","path":"/tag/disconnected"},{"tag":"Ignition","totalCount":1,"slug":"/ignition","path":"/tag/ignition"},{"tag":"Images","totalCount":5,"slug":"/images","path":"/tag/images"},{"tag":"Installation","totalCount":4,"slug":"/installation","path":"/tag/installation"},{"tag":"Logging","totalCount":1,"slug":"/logging","path":"/tag/logging"},{"tag":"Networking","totalCount":1,"slug":"/networking","path":"/tag/networking"},{"tag":"Openshift 4","totalCount":54,"slug":"/openshift-4","path":"/tag/openshift-4"},{"tag":"Quota","totalCount":1,"slug":"/quota","path":"/tag/quota"},{"tag":"RHCOS","totalCount":3,"slug":"/rhcos","path":"/tag/rhcos"},{"tag":"Registry","totalCount":3,"slug":"/registry","path":"/tag/registry"},{"tag":"SDN","totalCount":1,"slug":"/sdn","path":"/tag/sdn"},{"tag":"Secrets","totalCount":3,"slug":"/secrets","path":"/tag/secrets"},{"tag":"Skopeo","totalCount":1,"slug":"/skopeo","path":"/tag/skopeo"},{"tag":"Terraform","totalCount":1,"slug":"/terraform","path":"/tag/terraform"},{"tag":"Tools","totalCount":1,"slug":"/tools","path":"/tag/tools"},{"tag":"Troubleshooting","totalCount":12,"slug":"/troubleshooting","path":"/tag/troubleshooting"},{"tag":"Upgrade","totalCount":3,"slug":"/upgrade","path":"/tag/upgrade"},{"tag":"VMWare","totalCount":3,"slug":"/vm-ware","path":"/tag/vm-ware"},{"tag":"etcd","totalCount":3,"slug":"/etcd","path":"/tag/etcd"},{"tag":"oc","totalCount":8,"slug":"/oc","path":"/tag/oc"},{"tag":"tcpdump","totalCount":1,"slug":"/tcpdump","path":"/tag/tcpdump"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}